#!/usr/bin/env python

from sys import argv, exit
from string import find, strip, split

program = 'jobdisks'
version = '1.0'
verdate = '20080110'
author  = 'Walter Brisken'


fill = '   --   '

def usage():
	print '\n%s ver. %s   %s %s' % (program, version, verdate, author)
	print '\nA program to list all the modules used in a project'
	print '\nUsage: %s [options] [<input 1> [ <input 2> ... ] ] ]' \
		% (argv[0])
	print '\n<input X> is an input file.  Any number of files can be listed.  If no'
	print '          files are listed, all .input files in the current directory are used.'
	print '\nOptions can include:\n'
	print '    -h or --help     Print this help info\n'
	print '    -c or --changes  Print module changes only\n'
	print 'Example:  jobdisks\n'
	print 'Example:  jobdisks job1420.*.input\n'
	exit(0)

def getmodules(filename, antlist):
	mods = {}
	ants = []
	data = open(filename).readlines()
	n = 0
	for d in data:
		if d[:14] == 'TELESCOPE NAME':
			ant = strip(d[20:])
			ants.append(ant)
			if not ant in antlist:
				antlist.append(ant)
		elif d[:5] == 'FILE ':
			if len(ants) <= n:
				print '%s: more FILES than TELESCOPES!' % \
					filename
				exit(0)
			mods[ants[n]] = strip(d[20:])
			n += 1
	return mods

# use '-' to indicate no module for that station
def fillmodlist(antlist, modlist):
	for m in modlist:
		for a in antlist:
			if not a in m:
				m[a] = fill

def printmodlist(files, antlist, modlist):
	nf = len(files)
	na = len(antlist)
	antsused = []
	lastused = {}
	nspace = len(files[0])-6-4+2+3
	out = 'FILE' + (' '*nspace)
	for a in range(na):
		out += ('%-10s' % antlist[a])
		lastused[antlist[a]] = 'X'
	print out
	for f in range(nf):
		out = files[f][:-6]
		for a in range(na):
			ant = antlist[a]
			change = False
			if modlist[f][ant] == fill:
				change = False
			elif a not in antsused:
				antsused.append(a)
				change = True
				lastused[ant] = modlist[f][ant]
			elif modlist[f][ant] != lastused[ant]:
				change = True
				lastused[ant] = modlist[f][ant]
			if change:
				out += ' *'
			else:
				out += '  '
			out += modlist[f][ant]
		print out

def printchangelist(files, antlist, modlist):
	nf = len(files)
	na = len(antlist)
	lastused = {}
	for ant in antlist:
		lastused[ant] = 'X'
	for f in range(nf):
		jobchange = False
		for a in range(na):
			ant = antlist[a]
			change = False
			if modlist[f][ant] == fill:
				change = False
			elif f == 0:
				change = True
				lastused[ant] = modlist[f][ant]
			elif modlist[f][ant] != lastused[ant]:
				change = True
				lastused[ant] = modlist[f][ant]
			if change:
				if not jobchange:
					jobchange = True
					print files[f][:-6]
				print '  %-2s %s' % (ant, modlist[f][ant])
	

def getmoduleset(files):
	antlist = []
	modlist = []
	for filename in files:
		modlist.append(getmodules(filename, antlist))

	antlist.sort()

	fillmodlist(antlist, modlist)

	return antlist, modlist


mode = 'Modules'

if len(argv) < 2:
	usage()
else:
	files = []
	masterant = ''
	for arg in argv[1:]:
		if arg == '-h' or arg == '--help':
			usage()
		elif arg == '-c' or arg == '--changes':
			mode = 'Changes'
		else:
			if arg[-6:] == '.input':
				files.append(arg)
			else:
				print 'unknown file type : %s' % arg
				exit(0)

if len(files) < 1:
	files = glob('*.input')

antlist, modlist = getmoduleset(files)

if mode == 'Modules':
	printmodlist(files, antlist, modlist)
elif mode == 'Changes':
	printchangelist(files, antlist, modlist)
else:
	print 'Unknown mode of operation : %s' % mode
